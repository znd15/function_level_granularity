
retry:
	ret = lock_taken = 0;

	/*
 * To avoid races, we attempt to take the lock here again
 * (by doing a 0 -> TID atomic cmpxchg), while holding all
 * the locks. It will most likely not succeed.
 */
	newval = vpid;
	if (set_waiters)
		newval |= FUTEX_WAITERS;

	if (unlikely(cmpxchg_futex_value_locked(&curval, uaddr, 0, newval)))
		return -EFAULT;

	/*
 * Detect deadlocks.
 */
	if ((unlikely((curval & FUTEX_TID_MASK) == vpid)))
		return -EDEADLK;

	/*
 * Surprise - we got the lock. Just return to userspace:
 */
	if (unlikely(!curval))
		return 1;

	uval = curval;

	/*
 * Set the FUTEX_WAITERS flag, so the owner will know it has someone
 * to wake at the next unlock.
 */
	newval = curval | FUTEX_WAITERS;

	/*
 * Should we force take the futex? See below.
 */
	if (unlikely(force_take)) {
		/*
 * Keep the OWNER_DIED and the WAITERS bit and set the
 * new TID value.
 */
		newval = (curval & ~FUTEX_TID_MASK) | vpid;
		force_take = 0;
		lock_taken = 1;
	}