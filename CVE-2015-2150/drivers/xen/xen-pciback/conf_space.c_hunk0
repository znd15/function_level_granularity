



/*
 * PCI Backend - Functions for creating a virtual configuration space for
 * exported PCI Devices.
 * It's dangerous to allow PCI Driver Domains to change their
 * device's resources (memory, i/o ports, interrupts). We need to
 * restrict changes to certain PCI Configuration registers:
 * BARs, INTERRUPT_PIN, most registers in the header...
 *
 * Author: Ryan Wilson <hap9@epoch.ncsc.mil>
 */

#include <linux/kernel.h>
#include <linux/module.h>
#include <linux/pci.h>
#include "pciback.h"
#include "conf_space.h"
#include "conf_space_quirks.h"

static bool permissive;
module_param(permissive, bool, 0644);

/* This is where xen_pcibk_read_config_byte, xen_pcibk_read_config_word,
 * xen_pcibk_write_config_word, and xen_pcibk_write_config_byte are created. */
#define DEFINE_PCI_CONFIG(op, size, type) \
int xen_pcibk_##op##_config_##size \
(struct pci_dev *dev, int offset, type value, void *data) \
{ \
 return pci_##op##_config_##size(dev, offset, value); \
}